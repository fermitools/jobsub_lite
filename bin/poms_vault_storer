#!/bin/sh

#
# script to use as _condor_SEC_CREDENTIAL_STORER for POMS analysis jobs. 
# and possilby for production launches
#

parse_arg() {
  # we get handed oauth service and optional &key=value suffixes
  # this sets oauth_service, scopes, and handle, possibly
  eval `echo "oauth_service=$*'" | sed -e "s/&/';/g" -e "s/=/='/g"`
}

get_vaulttoken() {
  vtf=`echo $HTGETTOKENOPTS | sed -e 's/.*--vaulttokeninfile=\([^ ]*\).*/\1/'`
  vtok=`< $vtf `
}

check_cred() {
  condor_store_cred query-oauth \
    -u $USER@fnal.gov \
    -s ${oauth_service}_${handle} \
    -S ${scopes}
}

store_cred() {
  vurl="https://htvaultprod.fnal.gov:8200/v1/secret/oauth/creds/$oauth_service/$USER:default"
  printf "{\n  \"vault_token\": \"$vtok\",\n  \"vault_url\": \"$vurl\"\n}" |
    condor_store_cred add-oauth \
     -u $USER@fnal.gov \
     -s ${oauth_service}_${handle} \
     -S ${scopes} \
     -i -
}

log_stuff() {
  olf=/tmp/cvs_$USER_$$.log
  exec 2> $olf
  set -x
  echo "$0: logging stderr -x output to $olf"
}


main() {
  PATH=/usr/sbin:$PATH
  log_stuff
  parse_arg "$1"
  get_vaulttoken
  if check_cred ; then
     :
  else
     store_cred
  fi
}

main "$@"
