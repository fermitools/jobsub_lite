#!/usr/bin/python3 -I

#
# jobsub_cmd -- generic wrapper for condor commands
# COPYRIGHT 2022 FERMI NATIONAL ACCELERATOR LABORATORY
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
#
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
"""
    jobsub generic wrapper for condor commands -- parse args like
    -G group,  find schedd, call generic condor cmd
"""
# pylint: disable=wrong-import-position,wrong-import-order,import-error

import os
import sys
import re
import time

if os.environ.get("LD_LIBRARY_PATH", ""):
    del os.environ["LD_LIBRARY_PATH"]
    os.execv(sys.argv[0], sys.argv)

PREFIX = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.append(os.path.join(PREFIX, "lib"))

import get_parser

verbose = 0  # pylint: disable=invalid-name


# pylint: disable=too-many-branches
def main() -> None:
    """main line of code, proces args, etc."""
    global verbose  # pylint: disable=invalid-name,global-statement
    parser = get_parser.get_jobid_parser(add_condor_epilog=True)
    parser.add_argument("--user", help="Set username to look at", default="")
    parser.add_argument(
        "--qdate-ge",
        help="job submission date (qdate) greater than or equal to <submission date> Format for <submission date> is 'YYYY-MM-DD' or 'YYYY-MM-DD hh:mm:ss",
        default="",
    )
    parser.add_argument(
        "--qdate-le",
        help="job submission date (qdate) less than or equal to <submission date> Format for <submission date> is 'YYYY-MM-DD' or 'YYYY-MM-DD hh:mm:ss",
        default="",
    )

    arglist, passthru = parser.parse_known_args()

    verbose = arglist.verbose

    passthru.append("-backwards")

    # Re-insert --debug/--verbose if it was given
    if arglist.verbose:
        passthru.append("-debug")
    # if they gave us --jobid or --user put in the value plain, condor figures it out
    if arglist.jobid:
        passthru.append(arglist.jobid)

    if arglist.user:
        passthru.append(arglist.user)

    if arglist.qdate_ge:
        passthru.append("-constraint")
        since = int(time.mktime(time.strptime(arglist.qdate_ge, "%Y-%m-%d")))
        passthru.append(f"QDate > {since}")

    if arglist.qdate_le:
        passthru.append("-constraint")
        since = int(time.mktime(time.strptime(arglist.qdate_le, "%Y-%m-%d")))
        passthru.append(f"QDate < {since}")

    if os.environ.get("GROUP", None) is None:
        raise SystemExit(f"{sys.argv[0]} needs -G group or $GROUP in the environment.")

    default_formatting = True

    out = []
    schedd = ""
    for i in passthru:
        m = re.match(r"([\d.]*)@([\w.]+)", i)
        if m:
            # looks like a jobsub id 12.34@schedd.name
            schedd = m.group(2)
            i = m.group(1)
            if not i:
                continue

        if i.startswith("--"):
            i = i[1:]

        if i in [
            "-autoformat",
            "-batch",
            "-better-analyze",
            "-dag",
            "-format",
            "-io",
            "-json",
            "-long",
            "-nobatch",
            "-xml",
        ]:
            default_formatting = False

        out.append(i)

    if schedd:
        passthru.append("-name")
        passthru.append(schedd)

    passthru = out

    if default_formatting:
        passthru.extend(
            [
                "-format",
                "%-30s",
                'strcat(split(GlobalJobId,"#")[1],"@",split(GlobalJobId,"#")[0])',
                "-format",
                "%-10s\t",
                "Owner",
                "-format",
                "%-11s ",
                'formatTime(QDate,"%m/%d %H:%M")',
                "-format",
                "%-11s ",
                'formatTime(CompletionDate,"%m/%d %H:%M")',
                "-format",
                " %s ",
                'substr("UIRXCHE",JobStatus,1)',
                "-format",
                "%s",
                "JobsubCmd",
                "-format",
                " %-.20s",
                "Args",
                "-format",
                "\n",
                "Owner",
            ]
        )
        print(
            "JOBSUBJOBID                             OWNER                SUBMITTED           FINISHED            ST       CMD"
        )

    cmd = f"""condor_history {' '.join(f"'{x}'" for x in passthru)}"""
    os.system(cmd)


if __name__ == "__main__":
    try:
        main()
    except Exception as e:  # pylint: disable=broad-except
        if verbose:
            raise
        sys.stderr.write(f"\n\nError: {e.__class__.__name__}: {str(e)}\n\n")
        sys.exit(1)
